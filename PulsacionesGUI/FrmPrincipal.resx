<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAPgAAAHMAAACcAAAAuAAA
        AMsAAADOAAAAygAAAMAAAACqAAAAhgAAAFQAAAAiAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAABHAAAAqAQEBO8IBwj/BwcH/wYF
        Bv8EBAT/AgIC/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAO8AAAC4AAAAYAAAACAAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDAwNNCQkJ0AoKCv8BAAH/AwMD/w0N
        Df8ODQ7/DAwM/woKCv8IBwj/BQUF/wIBAv8AAAD/AAAA/wAAAP8AAAD/AAAA/wkJCf8CAgL6AAAAuAAA
        AFoAAAAeAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATCgoKqxAPEP4SERL/BgYG/wUF
        Bf8KCgr/DAsM/xQTFP8TEhP/ERAR/w4NDv8LCgv/BwYH/wMDA/8AAAD/AAAA/wAAAP8AAAD/Dg4O/w4O
        Dv8AAAD0AAAAdAAAAGAAAAA1AAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIw4ODtkUExT/FxYX/xEQ
        Ef8KCgr/CwoS/xAPGf8SEhL/FBMU/xkYGf8XFhf/FBMU/xEQEf8MDAz/BQUF/wUEBf8AAAD/AAAA/wAA
        AP8ODg7/Dg4O/wAAAPoAAABeAAAATwAAAEAAAAAoAAAACQAAAAAAAAAAAAAAAAAAAAAPDg/IFhUW/xoZ
        Gv8cGxz/Dw4P/xMSE/8ODjX/EBBF/xwbHP8hICH/Gxob/x0cHf8aGRr/FhUW/xIREv8HBwf/DAsM/wQE
        BP8AAAD/AAAA/w8PD/8NDQ3/AAAA9gAAAEYAAAA2AAAAJgAAABYAAAAGAAAAAAAAAAAAAAAAAAAAAhMS
        E9EbGhv/HRwd/xoZGv8WFRb/Gxob/w0OVv8ND2z/Hx4m/ygnKP8zMjP/IB8g/yAeIP8cGxz/FxYX/wwL
        DP8aGRr/CAgI/wMDA/8AAAD/EhIS/wwMDP8AAADmAAAALAAAABwAAAAMAAAAAwAAAAIAAAAAAAAAAAAA
        AAAAAAAAFxYXtyAfIP8fHh//GRgZ/x8eH/8jIin/GBWR/xYUjP8YGE3/LSst/zY0Nv9AP0D/IiAi/yEf
        If8cGxz/FBMU/x8fH/8UExT/BwYH/wEBAf8YGBj/CgoK/wAAAMgAAAASAAAABQAAAAIAAAACAAAAAQAA
        AAAAAAAAAAAAAAAAAAAZGRmWJSMl/yEgIv8bGhv/JiUm/zs6TP8uJ8D/JR+0/y8ukv86ODr/MTAx/zo4
        Ov9IR0j/ISAh/yAfIP8bGhv/Dw8P/zMzM/8KCQr/BAQE/yEhIf8HBwf/AAAAlQAAAAIAAAACAAAAAgAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAABoXGmspJyn/IiEi/yIhIv8tKy3/e3p6/3Vzyf8wKsb/Yl+6/5GQ
        kf81MzX/MzEz/zMxM/9BQEH/ISAh/x8dH/8VFBX/NjY2/xEQEf8ODg7/Jycn/wICAv8AAABOAAAAAgAA
        AAIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMKCspK/8kIiT/LCos/zIwMv+DgoL/w8PW/yMe
        uf8yL6f/0NDa/zs6O/81MzX/MjAy/yspK/8sKyz/Gxob/xwbHP8UFBT/Li0u/yUlJf8hISH/AAAA4gAA
        AAYAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCMkuzAuMP8gHyD/MjAy/2pp
        av94d7L/KiS9/x4apP9JSon/m5mZ/zU0Nf80MjT/Liwu/yQjJP8zMjP/JiQm/xgXGP8fHx//RkZG/w0M
        Df8AAABlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQkcIyIj2S0r
        Lf81NDX/ZGNk/6yrwv86Sar/RF+4/4WQs//m5eT/cXBw/zQyNP8wLjD/NTQ1/zg3OP82NTb/Li0u/0VE
        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
        H//4AB//8AAf//AAP//4AD///AB///8A//8=
</value>
  </data>
</root>